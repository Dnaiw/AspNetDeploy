@using Environment = AspNetDeploy.Model.Environment
@{
    ViewBag.Title = "Index";
    ViewBag.PageClass = "environmentPage";

    Layout = "~/Views/Shared/_Layout.cshtml";
    Environment environment = this.ViewBag.Environment;
    IList<DataField> dataFields = this.ViewBag.DataFields;
}

<div class="container">


    <h1>
        <div class="row">
            <div class="col-md-10">
                @environment.Name <span class="badge rounded-pill text-bg-secondary">Environment</span>
            </div>
            <div class="col-md-2 text-right">
                <button class="btn btn-default btn-lg">Configure</button>
            </div>
        </div>
    </h1>

    <hr />
    
    <h3>
        <div class="row">
            <div class="col-md-10">
                Variables
            </div>
            <div class="col-md-2 text-right">
                <a href="@Url.Action("Add", "Variables", new { environmentId = environment.Id })" class="btn btn-default">Add variable</a>
            </div>
        </div>
    </h3>

    <br/>
    <table class="table">
        <tbody>
            @{
                List<IGrouping<string, DataField>> groups = dataFields.Where(df => df.Key.Contains(".")).GroupBy(df => df.Key.Substring(0, df.Key.IndexOf(".", System.StringComparison.InvariantCulture))).OrderBy(g => g.Key).ToList();
            }

            @foreach (var group in groups)
            {
                @RenderVariables(environment, group)
                <tr>
                    <th><br/><br/></th>
                    <th><br/></th>
                    <th><br/></th>
                </tr>
            }

            @RenderVariables(environment, dataFields.Where(df => !df.Key.Contains(".")))

        </tbody>
    </table>

</div>

@helper RenderVariables(Environment environment, IEnumerable<DataField> dataFields)
{
    bool hideSensitiveValues = environment.GetBoolProperty("HideSensitiveValues");

    foreach (DataField dataField in dataFields.OrderBy(df => df.Key))
            {
                <tr>
                    <td>
                        <a class="text-muted" href="@Url.Action("Details", "Variables", new { id = dataField.Id })">@dataField.Key</a>
                    </td>
                    <td>
                        @{
                var dataFieldValues = environment.DataFieldValues.Where(dfv => dfv.DataFieldId == dataField.Id).ToList();
                        }

                        @if (dataFieldValues.Count == 0)
                        {
                            <span>&mdash;</span>
                        }
                        else
                        {
                            foreach (DataFieldValue dataFieldValue in dataFieldValues)
                            {
                                if (dataFieldValue == null || string.IsNullOrWhiteSpace(dataFieldValue.Value))
                                {
                                    continue;
                                }
                                
                                if (dataField.IsSensitive && hideSensitiveValues)
                                {
                                    <code>••••••••••••••••••••••••••••••</code>
                                }
                                else
                                {
                                    <code>@dataFieldValue.Value</code>
                                }
                            }
                        }
                    </td>
                    <td style="width: 50px;">
                        <a class="btn btn-dark" href="@Url.Action("Edit", "Variables", new { id = dataField.Id, environmentId = environment.Id })">Edit</a>
                    </td>
                </tr>
            }
        
}