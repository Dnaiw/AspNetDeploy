@using Newtonsoft.Json
@{
    ViewBag.Title = "Index";
    ViewBag.PageClass = "bundlesPage";

    Layout = "~/Views/Shared/_Layout.cshtml";
    Bundle bundle = this.ViewBag.Bundle;

}

@section Scripts
{
    <script src="~/Resources/JavaScripts/d3/d3.min.js"></script>
    <script src="~/Resources/JavaScripts/d3/tip.js"></script>

    <script>
        $(document).ready(function() {
            var width = 960;
            var height = 400;

            var tree = d3.layout.tree().size([height, width - 160]);

            var diagonal = d3.svg.diagonal()
                .projection(function(d) { return [d.y, d.x]; });

            var tip = d3.tip()
                .attr('class', 'd3-tip')
                .offset([-10, 0])
                .html(function(d) {
                    return ([
                        '<span>Version: ', d.name, '</span>',

                        ]).join('');
                });

            var svg = d3.select("#idD3Mapcontainer").append("svg")
                .attr("width", width)
                .attr("height", height)
                .append("g")
                .attr("transform", "translate(40,0)");

            svg.call(tip);

            var root =
            {
                "name": "Home",
                "children": @Html.Raw(JsonConvert.SerializeObject(this.ViewBag.BundleVersionsTree, new JsonSerializerSettings() { StringEscapeHandling = StringEscapeHandling.EscapeHtml}))
                };

            var nodes = tree.nodes(root);
            var links = tree.links(nodes);

            var link = svg.selectAll("path.link")
                .data(links)
                .enter()
                .append("path")
                .attr("class", "link")
                .attr("d", diagonal);

            var node = svg.selectAll("g.node")
                .data(nodes)
              .enter().append("g")
                .attr("class", "node")
                .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

            node.append("circle")
                .attr("r", 4.5);
             //   .on('mouseover', tip.show)
            //    .on('mouseout', tip.hide);

            node.append("text")
                .attr("dx", function(d) { return d.children ? 10 : -10; })
                .attr("dy", function(d) { return d.children ? -9 : -9; })
                .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
                .text(function(d) { return d.name; });

            

        });

    </script>
}

<div class="container">

    <h1>
        <div class="row">
            <div class="col-md-10">
                @bundle.Name
            </div>
            <div class="col-md-2 text-right">
                <button class="btn btn-default btn-lg">Configure</button>
            </div>
        </div>
    </h1>

    <hr />

    <div id="idD3Mapcontainer" class="diagram bundleVersionsDiagram">

    </div>

    @foreach (BundleVersion bundleVersion in bundle.BundleVersions.Where(bv => !bv.IsDeleted))
    {
        <h3>
            @bundleVersion.Name

            @if (bundleVersion.IsHead)
            {
                <small>Head</small>
            }

            @if (bundleVersion.GetIntProperty("AutoDeployToEnvironment") > 0)
            {
                <small>/ Auto deploy</small>
            }

        </h3>

        <div class="row">
            <div class="col-sm-7">

                <h4>Source control dependencies</h4>
                <ul>
                    @foreach (SourceControlVersion sourceControlVersion in bundleVersion.ProjectVersions.Select(pv => pv.SourceControlVersion).Distinct())
                    {
                        <li>@sourceControlVersion.SourceControl.Name / @sourceControlVersion.Name</li>
                    }
                </ul>
            </div>
            <div class="col-sm-5 text-right">
                <a href="@Url.Action("CreateNewVersion", new {id = bundleVersion.Id, isHotfix = true})" class="btn btn-default btn-lg">Create hotfix</a>
                <a href="@Url.Action("CreateNewVersion", new {id = bundleVersion.Id})" class="btn btn-default btn-lg">Create new version</a>
            </div>
        </div>

        <hr />
    }

    <div>

    </div>

</div>
