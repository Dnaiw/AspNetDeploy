
@{
    ViewBag.Title = "Logs";
    Layout = "~/Views/Shared/_Layout.cshtml";

    AspNetDeployExceptionEntry aspNetDeployExceptionEntry = this.ViewBag.AspNetDeployExceptionEntry;
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1>Exception #@aspNetDeployExceptionEntry.Id</h1>
        </div>
    </div>
    
    <hr/>

    <dl class="dl-horizontal">
        <dt>Date</dt>
        <dd><span style="white-space: nowrap">
                @aspNetDeployExceptionEntry.TimeStamp.ToLocalTime().ToString("d MMMM")
                <small class="text-muted">@aspNetDeployExceptionEntry.TimeStamp.ToLocalTime().ToString("H:mm")</small>
            </span>
        </dd>
        <dt>User</dt>
        <dd>
            @if (aspNetDeployExceptionEntry.User == null)
            {
                <span>–</span>
            }
            else
            {
                @aspNetDeployExceptionEntry.User.Name
            }
        </dd>
       
    </dl>
    
    <hr/>

    @RenderException(aspNetDeployExceptionEntry.ExceptionEntry)



    @* <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Date</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (AspNetDeployExceptionEntry aspNetDeployExceptionEntry in aspNetDeployExceptionEntries)
            {
                <tr >
                    <td>
                        <b>
                            @Html.ActionLink(aspNetDeployExceptionEntry.Id.ToString(), "Details", new { id = aspNetDeployExceptionEntry.Id })
                        </b>
                    </td>
                    <td>
                        <span style="white-space: nowrap">
                            @aspNetDeployExceptionEntry.TimeStamp.ToLocalTime().ToString("d MMMM")
                        <small class="text-muted">@aspNetDeployExceptionEntry.TimeStamp.ToLocalTime().ToString("H:mm")</small>
                    </span>
                    </td>
                    <td>
                        <div><b>@aspNetDeployExceptionEntry.ExceptionEntry.TypeName</b></div>
                        <div>@aspNetDeployExceptionEntry.ExceptionEntry.Message</div>
                    </td>

                </tr>
            }
        </tbody>
    </table>*@

</div>


@helper RenderException(ExceptionEntry exceptionEntry)
{
    <h3>@exceptionEntry.TypeName</h3>
    <pre>@exceptionEntry.Message</pre>

    if (!string.IsNullOrWhiteSpace(exceptionEntry.StackTrace))
    {
        <pre>@exceptionEntry.StackTrace</pre>
    }

    <dl class="dl-horizontal">

        @foreach (ExceptionEntryData entry in exceptionEntry.ExceptionData)
        {
            if (entry.Name.Equals("sourceCode", StringComparison.InvariantCultureIgnoreCase))
            {
                continue;
            }

            <dt>@entry.Name</dt>
            <dd>
                <pre>@entry.Value</pre>
            </dd>
        }
    </dl>

    if (exceptionEntry.InnerExceptionEntry != null)
    {
        <hr />
        @RenderException(exceptionEntry.InnerExceptionEntry)
    }
}