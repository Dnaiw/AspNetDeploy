@using AspNetDeploy.WebUI.Models
@{
    ViewBag.Title = "Index";
    ViewBag.PageClass = "sourcesPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    @foreach (SourceControlInfo sourceControlInfo in this.ViewBag.SourceControls)
    {
        <h1 id="@("idSourceControl" + sourceControlInfo.SourceControl.Id)">
            @Html.ActionLink(sourceControlInfo.SourceControl.Name, "Details", new { id = sourceControlInfo.SourceControl.Id })
            @switch (sourceControlInfo.SourceControl.Type)
            {
                case SourceControlType.Svn:
                    <small>SVN</small>
                    break;

                case SourceControlType.Git:
                <small>Git</small>
                    break;

                case SourceControlType.FileSystem:
                <small>File system</small>
                    break;

                default:
                <small>Other</small>
                    break;
            }

        </h1>

        <hr />

    <div class="row">
        @foreach (SourceControlVersionInfo sourceControlVersionInfo in sourceControlInfo.SourceControlVersionsInfo)
        {
            IEnumerable<IGrouping<string, ProjectVersionInfo>> groups = sourceControlVersionInfo.ProjectVersionsInfo.GroupBy(pvs => pvs.ProjectVersion.SolutionFile);
            
            <div class="col-sm-6">
                <h3>@sourceControlVersionInfo.SourceControlVersion.Name</h3>

                @foreach (IGrouping<string, ProjectVersionInfo> group in groups)
                {
                    foreach (ProjectVersionInfo projectVersionInfo in group.OrderBy( p => p.ProjectVersion.ProjectType).ThenBy( p => p.ProjectVersion.Name))
                    {
                        bool hasWeb = projectVersionInfo.ProjectVersion.ProjectType.HasFlag(ProjectType.Web);
                        bool hasTest = projectVersionInfo.ProjectVersion.ProjectType.HasFlag(ProjectType.Test);
                        bool hasConsole = projectVersionInfo.ProjectVersion.ProjectType.HasFlag(ProjectType.Console);

                        if (hasWeb || hasTest || hasConsole)
                        {
                            <div>
                                <a href="@Url.Action("Details", "ProjectVersions", new { id = projectVersionInfo.ProjectVersion.Id })">
                                    @if (hasWeb)
                                    {
                                        <img src="~/Resources/Layout/Images/Icons/VsWebProject.PNG" />
                                    }
                                    @if (hasTest)
                                    {
                                        <img src="~/Resources/Layout/Images/Icons/VsTestProject.png" />
                                    }
                                    @if (hasConsole)
                                    {
                                        <img src="~/Resources/Layout/Images/Icons/VsConsoleProject.PNG" />
                                    }

                                    @projectVersionInfo.ProjectVersion.Name

                                    @if (projectVersionInfo.ProjectVersion.BundleVersions.Count > 0)
                                    {
                                        <img src="~/Resources/Layout/Images/Icons/box16-2.png" />
                                    }
                                    else if (!projectVersionInfo.ProjectVersion.Project.GetBoolProperty("NotForDeployment"))
                                    {
                                        <img src="~/Resources/Layout/Images/Icons/new16.png" />
                                    }
                                </a>
                            </div>
                        }
                    }
                        @*<div class="col-sm-6">
                            <img src="~/Resources/Layout/Images/Icons/VsSolution.png" />
                            @group.Key
                        </div>*@
                }
            </div>

        }
    </div>



        @*switch (sourceControlInfo.SourceControl.Type)
            {
                case SourceControlType.Svn:

                    IEnumerable<ProjectVersionInfo> projectsInfo = sourceControlInfo.ProjectsInfo;
                    IEnumerable<IGrouping<string, ProjectVersionInfo>> groupedProjects = projectsInfo.GroupBy(p => p.Project.SolutionFile);

                    foreach (var group in groupedProjects)
                    {
                        <h5><img src="~/Resources/Layout/Images/Icons/VsSolution.png" /> @group.Key</h5>

                        foreach (ProjectVersionInfo projectInfo in group.Where(p => p.Project.ProjectType == ProjectType.Web))
                        {
                            <div class="row project">
                                <div class="col-md-6">
                                    <div class="name">
                                        <img src="~/Resources/Layout/Images/Icons/VsWebProject.png" />
                                        @projectInfo.Project.Name – @projectInfo.ProjectState
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @foreach (Bundle bundle in projectInfo.Project.Bundles)
                                    {
                                        <p>@bundle.Name</p>
                                    }
                                </div>
                            </div>
                        }
                        foreach (ProjectVersionInfo projectInfo in group.Where(p => p.Project.ProjectType == ProjectType.Test))
                        {
                            <div class="row project">
                                <div class="col-md-6">
                                    <div class="name">
                                        <img src="~/Resources/Layout/Images/Icons/VsTestProject.png" />
                                        @projectInfo.Project.Name – @projectInfo.ProjectState
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @foreach (Bundle bundle in projectInfo.Project.Bundles)
                                    {
                                        <p>@bundle.Name</p>
                                    }
                                </div>
                            </div>
                        }




                    }
                    break;

                case SourceControlType.Git:

                    break;

                case SourceControlType.FileSystem:
                <div class="row project">
                    <div class="col-md-6">
                        <div class="name">
                            <div>@sourceControlInfo.SourceControl.GetStringProperty("Path")</div>
                        </div>
                    </div>
                </div>

                    break;

                default:
                    break;
            }*@

        <br />
    }

</div>
@*

    <script>

        $(function ()
        {

            setInterval(function ()
            {

                $.ajax('@Url.Action("GetSourceControlStates")').success(function (data)
                {

                    for (var i = 0; i < data.length; i++)
                    {
                        var header = $("#idSourceControl" + data[i].id);
                        var small = header.find("small.state");
                        var img = header.find("img");

                        switch (data[i].state)
                        {
                            case 1:
                                small.fadeOut('');
                                img.fadeOut();
                                break;

                            case 2:
                                small.fadeIn();
                                small.text('Loading..');
                                img.fadeIn();
                                break;

                            case 4:
                                small.fadeIn();
                                small.text('Error');
                                img.fadeOut();
                                break;
                        }

                    }

                });

            }, 3000);

        });

    </script>
*@
